<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[优化 Hexo 的总结和 Markdown 编辑器推荐]]></title>
    <url>%2Fhexo-improve-summarize.html</url>
    <content type="text"><![CDATA[前言最近和一个朋友聊天的时候谈到了一些 hexo 的优化，并且给我提了一些建议，感受颇多。于是我就开始了新的折腾之旅，下面就是我这几天遇到的疑问和解决办法。 更新Hexo 更新及其插件更新Hexo更新网上有很多方法，但都没有怎么试验过，因为在我最后一次部署 Hexo 的时候它的版本号依然是 3.5.0。（如果下面方法不成功但话，就需要大家自行谷歌了） 小版本更新如果你进行的是小版本的更新可以这样 1$ npm update -g hexo 或者 1$ npm update 通过hexo -v可以查看版本是否变化。 大版本更新 通过官网和各种谷歌查到的命令和方法如下： 12$ npm install hexo-cli -g$ npm install 如果没有成功的话，需要重新定义在站点根目录下的package.json。 1234567&#123; &quot;name&quot;: &quot;hexo-site&quot;, &quot;version&quot;: &quot;0.0.0&quot;, &quot;private&quot;: true, &quot;hexo&quot;: &#123; &quot;version&quot;: &quot;3.5.0&quot; &#125;, 将版本号改为最新版的版本号，再次执行上面的两个命令。 插件更新如果你不知道插件最新版本的话，可以通过npm outdated列出需要更新的插件名字和最新版本号。同样也有两种方法，任选其一就可以。 通过更改上述package.json文件中包含的插件版本号，并通过如下命令进行更新插件： 1$ npm update 当然你可以不修改任何文件通过如下命令更新 1$ npm install plugins-name@latest -S 其中plugins-name改为你想要更新的插件名字。 NexT 主题及其更新因为 NexT 主题在 GitHub 上迁移到新团队组织者名下，并且进入了6.0.x的新版本，优化不少，还添加很多新的留言模块，这些在下面会谈到。 从 5.1.x 更新如果你想从5.1.x更新到6.0.x，请看 这里 。 一般的更新你可以通过如下命令更新到最新的 master 分支： 12$ cd themes/next$ git pull 如果你遇到了这样的错误《Commit your changes or stash them before you can merge》你可以用 NexT 根据 Hexo 数据文件特性 进行更新。如果你是 Git 大神，想必自会解决吧！ 还有问题的话，可以去 NexT在 Github 上的新仓库中去提 issues，并仔细阅读README。 Hexo 的部署和托管Hexo 博客的部署和托管有很多方式，最常见的，资料最多的就是通过 GitHub 来搭建 Hexo 博客，后期在部署到自己的 VPS 上，通过 VPS 上的 Web 服务器来访问博客的内容。也有人选择 Netlify 这种更加简单的托管方式，并且自动抓取你上传到 GitHub 的静态文件，通过绑定的域名访问。下面就分别介绍一下两者。 部署到自己的VPS当你自己有 VPS 的时候，自己博客可以同时托管到 GitHub 和 自己的 VPS 上。网上有很多教程，我列出两篇比较完整和相近的文章供大家参考。 如何将你的hexo博客部署在vps上？ Deploy Hexo Blog to VPS |部署Hexo博客到VPS 上述两篇文章的 VPS 上的 Web 服务器是 Nginx 。这种比较常见资料很多，功能也很强大，相对的就是配置较为麻烦。有的同学肯定会说看不懂啊什么的，那么就有一种好配置，自动化比较好的 Web 服务器 —— Caddy。当然这个配置简单但资料极少，感兴趣的同学可以去找找看。 VPS 就有很多比较好的商家，比如绑定 GitHub 学生套餐的 Digital Ocean，还有熟知 BandwagonHost （ 搬瓦工 ）和 支付更灵活的 Vultr 都很不错。这些我会在下一篇博客中介绍，并介绍一些爱国者工具。 Netlify 更加方便的托管服务商如果博客的内容不大，并且不想花钱买 VPS，还想一键就有 https 的保护，那么我推荐使用 Netlify ，非常省心。 使用 GitHub 账号登陆 Netlify。 登陆后，右上角选择New site from Git。 选择 Github ，然后关联包含网站源代码的仓库 设置，一路默认就好，如果你有自己的域名可以跟着提示一直走下去，将自己域名解析到 Netlify 服务器上。 域名设置。参考 Netlify 的详细说明文档。 HTTPS 设置。在 Domain management中，找到 HTTPS， 点击 Let’s Encrypt 就可以，变成下图：就可以了。从此你的站点加上了小锁，整个世界都美好了。 NexT 评论系统在最新的6.0.x版本里，NexT 集成了一些新的评论系统，除了老牌的 Disqus 以外，最让我心动是 Valine 和 Gitment 这两个。 Gitment其中 Gitment 是受 GitHub 的 issues 启发而开发的，还支持 Markdown 语法。一开始很喜欢很看好这个评论系统，但作者已经快一年没有更新过或者优化了。此外有一个缺点，就是不能匿名，必须登录 GitHub 账号，进行评论，并且每一篇文章需要自己稍微手动配置一下。最要命的是它是相当于 issues ，意味着你会不断的收到邮件提醒。所以我放弃了。 ValineValine 是我在查资料的时候看见有一个博主写了一篇关于它的文章。看了后，很是心动。正好新版的 NexT 集成了它，就用它了。 Valine，和 Gitment 具有相同的一点就是支持 Markdown 语法，此外它支持匿名和用邮箱登录。不同的是 Valine 的管理是通过 leancloud 完成的。意味着，你需要注册一个 leancloud，来完成相关的评论管理工作。这样已经很简单了。相比 Disqus 你需要采用代理来说很不错了。相关的设置，可以参考 Valine 官网上的说明。 为什么不推荐其他的评论系统？因为其他的要不不干了，要不需要备案什么的比较麻烦。 （= = 我懒） SEO优化NexT 的 SEO 优化，我只推荐谷歌，不要问百度的怎么了。百度太特了，放着标准化的不用，非得用自己的。 Google Webmaster tools设置 Google站点管理工具 的验证字符串，用于提交 sitemap ( 在 Google Search Console 上有很多验证方式，这里推荐的是 NexT 官网上提供的验证方法。） 获取 google site verification code 登录 Google Webmaster Tools， 导航到验证方法，并选择 HTML Tag。将会获取到一段代码： 1&lt;meta name=&quot;google-site-verification&quot; content=&quot;XXXXXXXXXXXXXXXXXXXXXXX&quot; /&gt; 将 content 里面的 XXXXXXXXXXXXXXXXXXXXXXX 复制出来。 设置主题。编辑主题配置文件，新增/修改字段 google_site_verification 1google_site_verification: XXXXXXXXXXXXXXXXXXXXXXX 提交 Sitemap 进入博客根目录，输入以下命令： 1$ npm install hexo-generator-sitemap --save 打开站点根目录下的 _config.yml，在最下方添加如下字段 12sitemap:path: sitemap.xml 然后执行如下命令 1$ hexo clean &amp;&amp; hexo g -d 进入 Google Search Console - 抓取 - 站点地图，点击「添加/测试站点地图」，输入你的博客网址。若无报错则站点地图提交成功 提交robots.txtrobots.txt 是一种存放于网站根目录下的 ASCII 编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。robots.txt 放在博客目录下的 source 文件夹中，博客生成后在站点目录 /public/ 下。我的文件内容如下： 123456789101112131415User-agent: *Allow: /Allow: /archives/Allow: /tags/Allow: /about/Allow: /categories/Disallow: /vendors/Disallow: /js/Disallow: /css/Disallow: /fonts/Disallow: /vendors/Disallow: /fancybox/Sitemap: https://liyafly.com/sitemap.xml robots.txt 文件更新至网站后可进入 Google Search Console - 抓取 - robots.txt 测试工具进行测试。 Markdown 编辑器推荐Markdown 编辑器有很多很多种，真的要写一篇推荐的话，可能会有很多要介绍的。有时间，我也会专门写一篇文章来介绍。现在我就调一些比较常用和好用的给大家。 简书比较喜欢写文章，而不注重技术类型，简书是一个不错的平台。当然在 17 年年末的时候出现了严重歧视程序员的事件，导致很多技术写作人员的转战其他平台。不介意的话可以在该平台写作。具有跨平台性。 文本编辑器 + 插件这类文本编辑器很多，比较常用的有Atom、Visual Studio Code、Sublime Text 3、Vim 等。 有很多插件，这里就不一一介绍了。这类比较轻便，而且用的很多都是大神和单纯的写文章的人群。具有跨平台性，有良好的数学公式插件，方便显示。 laverna贴图方便。现在在用的新秀，功能基本都有，目前还没有看到付费计划，没有 Android 版本和 iOS 版本，其他三大平台都有。 MWeb独占 macOS 和 iOS 平台。对比其他的特优秀的写作软件来说，价格感人。功能很多：支持一键发布文章，一键上传图床，具有文档管理功能等等，特别好用的一个软件。但只可惜只在 Apple 的生态圈。此外，作者在官网上分享了很多小窍门。有兴趣的同学可以去看看。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[新年新面貌]]></title>
    <url>%2F%E6%96%B0%E5%B9%B4%E6%96%B0%E9%9D%A2%E8%B2%8C.html</url>
    <content type="text"><![CDATA[新的一年开始了，虽然已经过去了十二分之一，没有写年终总结但还是要迎接新面貌嘛。大学生活也已经度过了四分之三了，真的是很快，想想这几年的大学生活什么都没有记下来就有点亏亏的感觉，当然也是因为自己变的有点懒有关，只能赖自己太懒惰了。那么今年开始接着写东西吧。想当年，自己中二病的时候在新浪博客和 QQ 空间写下来不少文字，有诗歌有自己乱写的短篇小说，现在回想起来真的好中二，各种垃圾，还好都已经尘封了起来。自从 15 年入大学后，新浪博客已经基本不上了，QQ 空间里的文章都已经删了。久而久之，再也没有写过东西了。 在去年春天开学之后，正好看见我们老四在折腾 hexo 博客，突然又想写点东西了，也记录一下大学里学到的东西，做个笔记，日常和技术类型博客（当然是折腾无止境的思想指使着我干的）。这一折腾就是快一年啊，当时折腾的时候是为了选好看的主题而发愁，在主题官网看了好久也下了不少，好看的主题倒是不少，但都不是很喜欢的类型。想要比较简洁的而且定制性很强的主题，慢慢的发现 next 这个主题，于是开始研究如何配置起来好玩。（最新的next主题在GitHub上迁移到了新的组织名下，并做了一点点的完善，链接如下 https://github.com/theme-next/hexo-theme-next ) 这期间翻了不少博客和文档，也中断过很久，之后电脑重装过几次就放弃了在写博客的念头。总之在今天之前我是真的是在折腾而没有静下心来写下来一篇文章。曾经还想把如何搭建 hexo + GitHub 的博客写下来，但放弃了，因为它已经很多了而且很完善了，一搜就有很多，我再写也大抵相同，没有什么新意。直到年底，我又捡起了这个博客。原因还是那个，写写学到的内容，分享笔记和日常的技术博客，当然也为了督促自己。 新年新气象，新面貌，那就从这篇博客开始吧，也算立一个 flag，多写点博客，争取半个月一篇文章。emmmm，先这样吧。去看月全食的直播了。]]></content>
      <categories>
        <category>日常</category>
      </categories>
  </entry>
</search>
